//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class ENV_TYPEWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(ENV_TYPE));
		L.RegVar("MASTER", get_MASTER, null);
		L.RegVar("DEV", get_DEV, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
		TypeTraits<ENV_TYPE>.Check = CheckType;
		StackTraits<ENV_TYPE>.Push = Push;
	}

	static void Push(IntPtr L, ENV_TYPE arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(ENV_TYPE), L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MASTER(IntPtr L)
	{
		ToLua.Push(L, ENV_TYPE.MASTER);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DEV(IntPtr L)
	{
		ToLua.Push(L, ENV_TYPE.DEV);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		ENV_TYPE o = (ENV_TYPE)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

