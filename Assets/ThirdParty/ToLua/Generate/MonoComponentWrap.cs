//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class MonoComponentWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(MonoComponent), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("AddListenEvent", AddListenEvent);
		L.RegFunction("DelListenEvent", DelListenEvent);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("LuaName", get_LuaName, set_LuaName);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddListenEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			MonoComponent obj = (MonoComponent)ToLua.CheckObject<MonoComponent>(L, 1);
			System.Action<string,object[]> arg0 = (System.Action<string,object[]>)ToLua.CheckDelegate<System.Action<string,object[]>>(L, 2);
			obj.AddListenEvent(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DelListenEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			MonoComponent obj = (MonoComponent)ToLua.CheckObject<MonoComponent>(L, 1);
			System.Action<string,object[]> arg0 = (System.Action<string,object[]>)ToLua.CheckDelegate<System.Action<string,object[]>>(L, 2);
			obj.DelListenEvent(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LuaName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MonoComponent obj = (MonoComponent)o;
			string ret = obj.LuaName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index LuaName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_LuaName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MonoComponent obj = (MonoComponent)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.LuaName = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index LuaName on a nil value");
		}
	}
}

