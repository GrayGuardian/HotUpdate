//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class System_Net_WebResponseWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(System.Net.WebResponse), typeof(System.MarshalByRefObject));
		L.RegFunction("Close", Close);
		L.RegFunction("Dispose", Dispose);
		L.RegFunction("GetResponseStream", GetResponseStream);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("IsFromCache", get_IsFromCache, null);
		L.RegVar("IsMutuallyAuthenticated", get_IsMutuallyAuthenticated, null);
		L.RegVar("ContentLength", get_ContentLength, set_ContentLength);
		L.RegVar("ContentType", get_ContentType, set_ContentType);
		L.RegVar("ResponseUri", get_ResponseUri, null);
		L.RegVar("Headers", get_Headers, null);
		L.RegVar("SupportsHeaders", get_SupportsHeaders, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Close(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			System.Net.WebResponse obj = (System.Net.WebResponse)ToLua.CheckObject<System.Net.WebResponse>(L, 1);
			obj.Close();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Dispose(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			System.Net.WebResponse obj = (System.Net.WebResponse)ToLua.CheckObject<System.Net.WebResponse>(L, 1);
			obj.Dispose();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetResponseStream(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			System.Net.WebResponse obj = (System.Net.WebResponse)ToLua.CheckObject<System.Net.WebResponse>(L, 1);
			System.IO.Stream o = obj.GetResponseStream();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IsFromCache(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			System.Net.WebResponse obj = (System.Net.WebResponse)o;
			bool ret = obj.IsFromCache;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index IsFromCache on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IsMutuallyAuthenticated(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			System.Net.WebResponse obj = (System.Net.WebResponse)o;
			bool ret = obj.IsMutuallyAuthenticated;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index IsMutuallyAuthenticated on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ContentLength(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			System.Net.WebResponse obj = (System.Net.WebResponse)o;
			long ret = obj.ContentLength;
			LuaDLL.tolua_pushint64(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ContentLength on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ContentType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			System.Net.WebResponse obj = (System.Net.WebResponse)o;
			string ret = obj.ContentType;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ContentType on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ResponseUri(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			System.Net.WebResponse obj = (System.Net.WebResponse)o;
			System.Uri ret = obj.ResponseUri;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ResponseUri on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Headers(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			System.Net.WebResponse obj = (System.Net.WebResponse)o;
			System.Net.WebHeaderCollection ret = obj.Headers;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Headers on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SupportsHeaders(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			System.Net.WebResponse obj = (System.Net.WebResponse)o;
			bool ret = obj.SupportsHeaders;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index SupportsHeaders on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ContentLength(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			System.Net.WebResponse obj = (System.Net.WebResponse)o;
			long arg0 = LuaDLL.tolua_checkint64(L, 2);
			obj.ContentLength = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ContentLength on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ContentType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			System.Net.WebResponse obj = (System.Net.WebResponse)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.ContentType = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ContentType on a nil value");
		}
	}
}

