//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_PrimitiveTypeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(UnityEngine.PrimitiveType));
		L.RegVar("Sphere", get_Sphere, null);
		L.RegVar("Capsule", get_Capsule, null);
		L.RegVar("Cylinder", get_Cylinder, null);
		L.RegVar("Cube", get_Cube, null);
		L.RegVar("Plane", get_Plane, null);
		L.RegVar("Quad", get_Quad, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
		TypeTraits<UnityEngine.PrimitiveType>.Check = CheckType;
		StackTraits<UnityEngine.PrimitiveType>.Push = Push;
	}

	static void Push(IntPtr L, UnityEngine.PrimitiveType arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(UnityEngine.PrimitiveType), L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Sphere(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.PrimitiveType.Sphere);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Capsule(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.PrimitiveType.Capsule);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Cylinder(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.PrimitiveType.Cylinder);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Cube(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.PrimitiveType.Cube);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Plane(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.PrimitiveType.Plane);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Quad(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.PrimitiveType.Quad);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		UnityEngine.PrimitiveType o = (UnityEngine.PrimitiveType)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

