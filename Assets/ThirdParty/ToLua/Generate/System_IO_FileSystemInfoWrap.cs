//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class System_IO_FileSystemInfoWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(System.IO.FileSystemInfo), typeof(System.MarshalByRefObject));
		L.RegFunction("Delete", Delete);
		L.RegFunction("Refresh", Refresh);
		L.RegFunction("GetObjectData", GetObjectData);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("FullName", get_FullName, null);
		L.RegVar("Extension", get_Extension, null);
		L.RegVar("Name", get_Name, null);
		L.RegVar("Exists", get_Exists, null);
		L.RegVar("CreationTime", get_CreationTime, set_CreationTime);
		L.RegVar("CreationTimeUtc", get_CreationTimeUtc, set_CreationTimeUtc);
		L.RegVar("LastAccessTime", get_LastAccessTime, set_LastAccessTime);
		L.RegVar("LastAccessTimeUtc", get_LastAccessTimeUtc, set_LastAccessTimeUtc);
		L.RegVar("LastWriteTime", get_LastWriteTime, set_LastWriteTime);
		L.RegVar("LastWriteTimeUtc", get_LastWriteTimeUtc, set_LastWriteTimeUtc);
		L.RegVar("Attributes", get_Attributes, set_Attributes);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Delete(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			System.IO.FileSystemInfo obj = (System.IO.FileSystemInfo)ToLua.CheckObject<System.IO.FileSystemInfo>(L, 1);
			obj.Delete();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Refresh(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			System.IO.FileSystemInfo obj = (System.IO.FileSystemInfo)ToLua.CheckObject<System.IO.FileSystemInfo>(L, 1);
			obj.Refresh();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetObjectData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			System.IO.FileSystemInfo obj = (System.IO.FileSystemInfo)ToLua.CheckObject<System.IO.FileSystemInfo>(L, 1);
			System.Runtime.Serialization.SerializationInfo arg0 = (System.Runtime.Serialization.SerializationInfo)ToLua.CheckObject(L, 2, typeof(System.Runtime.Serialization.SerializationInfo));
			System.Runtime.Serialization.StreamingContext arg1 = StackTraits<System.Runtime.Serialization.StreamingContext>.Check(L, 3);
			obj.GetObjectData(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FullName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			System.IO.FileSystemInfo obj = (System.IO.FileSystemInfo)o;
			string ret = obj.FullName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index FullName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Extension(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			System.IO.FileSystemInfo obj = (System.IO.FileSystemInfo)o;
			string ret = obj.Extension;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Extension on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Name(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			System.IO.FileSystemInfo obj = (System.IO.FileSystemInfo)o;
			string ret = obj.Name;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Name on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Exists(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			System.IO.FileSystemInfo obj = (System.IO.FileSystemInfo)o;
			bool ret = obj.Exists;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Exists on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CreationTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			System.IO.FileSystemInfo obj = (System.IO.FileSystemInfo)o;
			System.DateTime ret = obj.CreationTime;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index CreationTime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CreationTimeUtc(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			System.IO.FileSystemInfo obj = (System.IO.FileSystemInfo)o;
			System.DateTime ret = obj.CreationTimeUtc;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index CreationTimeUtc on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LastAccessTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			System.IO.FileSystemInfo obj = (System.IO.FileSystemInfo)o;
			System.DateTime ret = obj.LastAccessTime;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index LastAccessTime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LastAccessTimeUtc(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			System.IO.FileSystemInfo obj = (System.IO.FileSystemInfo)o;
			System.DateTime ret = obj.LastAccessTimeUtc;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index LastAccessTimeUtc on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LastWriteTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			System.IO.FileSystemInfo obj = (System.IO.FileSystemInfo)o;
			System.DateTime ret = obj.LastWriteTime;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index LastWriteTime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LastWriteTimeUtc(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			System.IO.FileSystemInfo obj = (System.IO.FileSystemInfo)o;
			System.DateTime ret = obj.LastWriteTimeUtc;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index LastWriteTimeUtc on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Attributes(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			System.IO.FileSystemInfo obj = (System.IO.FileSystemInfo)o;
			System.IO.FileAttributes ret = obj.Attributes;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Attributes on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_CreationTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			System.IO.FileSystemInfo obj = (System.IO.FileSystemInfo)o;
			System.DateTime arg0 = StackTraits<System.DateTime>.Check(L, 2);
			obj.CreationTime = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index CreationTime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_CreationTimeUtc(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			System.IO.FileSystemInfo obj = (System.IO.FileSystemInfo)o;
			System.DateTime arg0 = StackTraits<System.DateTime>.Check(L, 2);
			obj.CreationTimeUtc = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index CreationTimeUtc on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_LastAccessTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			System.IO.FileSystemInfo obj = (System.IO.FileSystemInfo)o;
			System.DateTime arg0 = StackTraits<System.DateTime>.Check(L, 2);
			obj.LastAccessTime = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index LastAccessTime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_LastAccessTimeUtc(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			System.IO.FileSystemInfo obj = (System.IO.FileSystemInfo)o;
			System.DateTime arg0 = StackTraits<System.DateTime>.Check(L, 2);
			obj.LastAccessTimeUtc = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index LastAccessTimeUtc on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_LastWriteTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			System.IO.FileSystemInfo obj = (System.IO.FileSystemInfo)o;
			System.DateTime arg0 = StackTraits<System.DateTime>.Check(L, 2);
			obj.LastWriteTime = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index LastWriteTime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_LastWriteTimeUtc(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			System.IO.FileSystemInfo obj = (System.IO.FileSystemInfo)o;
			System.DateTime arg0 = StackTraits<System.DateTime>.Check(L, 2);
			obj.LastWriteTimeUtc = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index LastWriteTimeUtc on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Attributes(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			System.IO.FileSystemInfo obj = (System.IO.FileSystemInfo)o;
			System.IO.FileAttributes arg0 = (System.IO.FileAttributes)ToLua.CheckObject(L, 2, typeof(System.IO.FileAttributes));
			obj.Attributes = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Attributes on a nil value");
		}
	}
}

