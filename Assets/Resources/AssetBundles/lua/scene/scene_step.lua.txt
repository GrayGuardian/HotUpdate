local base = require('scene_base')
local Scene = class('scene_step', base)
function Scene:onLoad(a,b,c)
    -- print('scene_step onLoad',a,b,c)


    -- asset:load_prefab_async(
    --     'prefabs',
    --     'Cube',
    --     function(prefab)
    --         local go = GameObject.Instantiate(prefab)
    --         compMgr:addComponent(go.transform, 'test',{"我是a","我是b","我是c"})
    --     end
    -- )

    uiMgr:load("ui_test",{"2","我是传递给ui_test的参数b"},{order = 100});
    uiMgr:load("ui_test",{"1","我是传递给ui_test的参数b"},{order = 99});
    uiMgr:load("ui_test",{"5","我是传递给ui_test的参数b"},{order = 102});
    uiMgr:load("ui_test",{"4","我是传递给ui_test的参数b"},{order = 101});
    uiMgr:load("ui_test",{"3","我是传递给ui_test的参数b"},{order = 100});

    -- sceneMgr:load("Hotupdate",{"我是传给Hotupdate的a","我是传给Hotupdate的b","我是传给Hotupdate的c"});
end

function Scene:onDestroy()
    self.super:onDestroy(self)
    -- print('scene_step onDestroy')
end
return Scene
